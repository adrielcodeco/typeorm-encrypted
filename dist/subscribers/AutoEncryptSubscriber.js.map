{"version":3,"sources":["../../src/subscribers/AutoEncryptSubscriber.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,yBAAyB,EACzB,WAAW,EACX,WAAW,EACZ,MAAM,SAAS,CAAA;AAGhB,0CACmC,YAAW,yBAAyB;IAIrE,YAAY,CAAE,KAAK,EAAE,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI;IAO5C,YAAY,CAAE,KAAK,EAAE,WAAW,CAAC,GAAG,CAAC,GAAG,IAAI;IAO5C,SAAS,CAAE,MAAM,EAAE,GAAG,GAAG,IAAI;CAG9B","file":"AutoEncryptSubscriber.js","sourcesContent":["import {\n  EventSubscriber,\n  EntitySubscriberInterface,\n  InsertEvent,\n  UpdateEvent\n} from 'typeorm'\nimport { encrypt, decrypt } from '../transformers'\n\n@EventSubscriber()\nexport class AutoEncryptSubscriber implements EntitySubscriberInterface {\n  /**\n   * Encrypt before insertion.\n   */\n  beforeInsert (event: InsertEvent<any>): void {\n    encrypt(event.entity)\n  }\n\n  /**\n   * Encrypt before update.\n   */\n  beforeUpdate (event: UpdateEvent<any>): void {\n    encrypt(event.entity)\n  }\n\n  /**\n   * Decrypt after find.\n   */\n  afterLoad (entity: any): void {\n    decrypt(entity)\n  }\n}\n"]}